using SportsSide.DAL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using SportsSide.DAL.Models;

namespace SportsSideBL.Services
{
    public interface ISportsSideService
    {
        List<AREA> GetAreas();
        AREA GetArea(int id);
        bool PostArea(AREA area);
        bool PutArea(AREA area);
        bool DeleteArea(AREA area);
        List<FACILITY_TYPE> GetFacilityTypes();
        FACILITY_TYPE GetFacilityType(int id);
        List<CITY> GetCities();
        CITY GetCity(int id);
        List<CITY> GetCitiesByAreas(int id);
        List<DISTRICT> GetDistrictsByCities(int id);
        bool PostCity(CITY city);
        bool PutCity(CITY city);
        bool DeleteCity(CITY city);
        List<DISTRICT> GetDistricts();
        DISTRICT GetDistrict(int id);
        bool PostDistrict(DISTRICT area);
        bool PutDistrict(DISTRICT area);
        bool DeleteDistrict(DISTRICT area);
        bool PostFacilityType(FACILITY_TYPE facilityType);
        bool PutFacilityType(FACILITY_TYPE facilityType);
        bool DeleteFacilityType(FACILITY_TYPE facilityType);
        List<ANNOUNCEMENTS> GetAnn();
        List<SLIDER> GetSliders();
        SLIDER GetSlider(int id);
        bool PostSlider(SLIDER slider);
        bool PutSlider(SLIDER slider);
        bool DeleteSlider(SLIDER slider);
        List<FACILITY> GetAllFacilities();
        FACILITY GetFacility(int id);
        bool PostFacility(FACILITY facility);
        bool PutFacility(FACILITY facility);
        bool DeleteFacility(FACILITY facility);
        List<FACILITY_PICTURES> GetPicturesFromFacility(int id);
        List<FACILITY> GetFacilitiesByUserId(int id);
        USERS GetUser(string userName);
        USERS GetUser(int id);
        bool PostFacilityPicture(FACILITY_PICTURES facilityPicture);
        bool DeleteAllFacilityPicturesFromId(int id);
        bool PutUser(USERS user);
        List<RESERVATION> GetFacilityReservations(int id);
        List<SUBSCRIBER> GetFacilitySubscribers(int id);
        List<RESERVATION> GetReservationsByUserId(int id);
        bool PostReservation(RESERVATION reservation);
        bool PostSubscriber(SUBSCRIBER subscribe);
        List<SUBSCRIBER> GetFacilitySubscribersForSubscribe(int id);
        List<RESERVATION> GetReservationsForApprove(int userId);
        List<SUBSCRIBER> GetSubscribersForApprove(int userId);
        List<SUBSCRIBER> GetSubscribersByUserId(int userId);
        bool DeleteSubscriberByUserId(int userId);
        List<RESERVATION> GetAllReservationsForFacilityOwner(int id);
        List<SUBSCRIBER> GetAllSubscribersForFacilityOwner(int id);
        bool KontrolMail(string email);
        void SifreDegistirMail(string mail, int sifre);
        RESERVATION GetReservationFromReservationId(int id);
        bool PutReservation(RESERVATION reservation);
        SUBSCRIBER GetSubscriberFromSubscriberId(int id);
        bool PutSubscriber(SUBSCRIBER subscriber);
        List<USERS> GetAllUsers();
        List<ANNOUNCEMENTS> GetAllAnnouncements();
        bool PostAnnouncements(ANNOUNCEMENTS area);
        bool PutAnnouncements(ANNOUNCEMENTS area);
        bool DeleteAnnouncements(ANNOUNCEMENTS area);
        ANNOUNCEMENTS GetAnnouncementById(int id);
        List<USERS> GetUsersForPermission(string userName, string userFirstName, string userSurname);
        int CountFacility(string userName);
        int CountApprovedReservation(string userName);
        int CountSubscriber(string userName);
        int CountVisitor(string userName);
        List<FACILITY> GetFacilitiesByUserName(string userName);
        int PercentFacility(string userName);
        int PercentReservation(string userName);
        int PercentSubscriber(string userName);
        int TodayReservation(string userName);
        int TodaySubscriber(string userName);
        List<GroupByMonths> GroupByMonths(string userName);
        List<GroupByDays> GroupByDays(string userName);
        List<RESERVATION> liveReservations(int id);
        List<RESERVATION> oldReservations(int id);
        string UserRole(string isim);
    }
}
